<?php

namespace {{ namespace }};

use App\Models\{{ model }};
use {{ namespace }}\Interfaces\{{ class }}RepositoryInterface;
use MaduLinux\RepositoryPattern\Repository;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;

class {{ class }}Repository extends Repository implements {{ class }}RepositoryInterface
{
    /**
     * @var {{ modelClass }}
     */
    protected $model;

    /**
     * @var Builder
     */
    protected $query;

    /**
     * Constructor
     *
     * @param {{ modelClass }} $model
     */
    public function __construct({{ modelClass }} $model)
    {
        $this->model = $model;
        $this->query = $model->newQuery();
    }

    /**
     * Get model instance
     *
     * @return Model
     */
    protected function getModel(): Model
    {
        return $this->model;
    }

    /**
     * Reset query builder
     *
     * @return void
     */
    protected function resetQuery(): void
    {
        $this->query = $this->model->newQuery();
    }

    /**
     * Handle dynamic method calls
     *
     * @param string $method
     * @param array $arguments
     * @return mixed
     */
    public function __call($method, $arguments)
    {
        $this->query = $this->query->{$method}(...$arguments);
        return $this;
    }
}
